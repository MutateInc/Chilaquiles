"use strict";(self.webpackChunkchilaquiles=self.webpackChunkchilaquiles||[]).push([[9],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(a),m=r,b=p["".concat(d,".").concat(m)]||p[m]||c[m]||l;return a?n.createElement(b,i(i({ref:t},u),{},{components:a})):n.createElement(b,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},2823:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={label:"Estandares",sidebar_position:2},d=void 0,s={unversionedId:"Estandares de codigo",id:"Estandares de codigo",title:"Estandares de codigo",description:"Convenciones de Nombres",source:"@site/docs/Estandares de codigo.md",sourceDirName:".",slug:"/Estandares de codigo",permalink:"/Chilaquiles/docs/Estandares de codigo",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Estandares de codigo.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{label:"Estandares",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"El Proyecto",permalink:"/Chilaquiles/docs/El Proyecto"},next:{title:"Checklist de codigo",permalink:"/Chilaquiles/docs/Checklist de codigo"}},u={},c=[{value:"Convenciones de Nombres",id:"convenciones-de-nombres",level:2},{value:"Indentaci\xf3n",id:"indentaci\xf3n",level:2},{value:"Comentarios",id:"comentarios",level:2},{value:"Rutas",id:"rutas",level:2},{value:"Modelos",id:"modelos",level:2},{value:"Propiedades",id:"propiedades",level:3},{value:"Metodos",id:"metodos",level:3},{value:"Controladores",id:"controladores",level:2}],p={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"convenciones-de-nombres"},"Convenciones de Nombres"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Las variables deben nombrarse usando camelcase, comenzando con letras min\xfasculas (por ejemplo, localData), mientras que los nombres de variables globales deben comenzar con una letra may\xfascula (por ejemplo, GlobalData)."),(0,l.kt)("li",{parentName:"ul"},"Los nombres de constantes deben formarse con todas las letras may\xfasculas (por ejemplo, CONSDATA)."),(0,l.kt)("li",{parentName:"ul"},"Los nombres de las variables deben de ser significativos para comprender el motivo de su uso y hay que evitar el uso de d\xedgitos."),(0,l.kt)("li",{parentName:"ul"},"Las funciones deben describir el motivo de su uso de manera clara y breve y debe escribirse en camelcase comenzando con letras min\xfasculas (por ejemplo, guardarFuncion)."),(0,l.kt)("li",{parentName:"ul"},"Al momento de establecer un lenguaje para el c\xf3digo(Espa\xf1ol, Ingles, etc) este se debe de mantener al momento de nombramiento de variables"),(0,l.kt)("li",{parentName:"ul"},"Al momento de declarar una colecci\xf3n, arreglos o estructura de datos de m\xfaltiples objetos, esta debe de ser declarada en plural, as\xed mismo, al declarar una estructura individual, esta debe de ser declarada en singular.")),(0,l.kt)("h2",{id:"indentaci\xf3n"},"Indentaci\xf3n"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"El tama\xf1o del tab equivale a 4 espacios"),(0,l.kt)("li",{parentName:"ul"},"Debe haber un espacio despu\xe9s de una coma entre dos argumentos de funci\xf3n."),(0,l.kt)("li",{parentName:"ul"},"Cada bloque anidado debe estar debidamente indentado y espaciado."),(0,l.kt)("li",{parentName:"ul"},"La indentaci\xf3n adecuada debe estar al principio y al final de cada bloque del programa."),(0,l.kt)("li",{parentName:"ul"},"Todas las llaves deben comenzar la l\xednea donde se llama el argumento y el c\xf3digo que sigue al final de las llaves debe comenzar en una nueva l\xednea.")),(0,l.kt)("h2",{id:"comentarios"},"Comentarios"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Funciones con nombres que no describan su prop\xf3sito deben ser documentadas, en la documentaci\xf3n se deben definir el prop\xf3sito y las entradas y salidas de la funci\xf3n.")),(0,l.kt)("h2",{id:"rutas"},"Rutas"),(0,l.kt)("p",null,"El nombrambiento de rutas seguira el estandar de RESTful siguiente:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Nombre de la ruta"),(0,l.kt)("th",{parentName:"tr",align:null},"URL"),(0,l.kt)("th",{parentName:"tr",align:null},"HTTP Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Descripci\xf3n"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Index"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"Listado de beneficiarios")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"New"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiario/new"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"Mostrar form para crear nuevo beneficiario")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Create"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios"),(0,l.kt)("td",{parentName:"tr",align:null},"POST"),(0,l.kt)("td",{parentName:"tr",align:null},"Agregar un nuevo beneficiario")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Show"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"Consultar beneficiario")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Edit"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}/edit"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"Mostrar form de edici\xf3n")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Update"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}/edit"),(0,l.kt)("td",{parentName:"tr",align:null},"POST"),(0,l.kt)("td",{parentName:"tr",align:null},"Actualizar el beneficiario")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Destroy"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}/delete"),(0,l.kt)("td",{parentName:"tr",align:null},"POST"),(0,l.kt)("td",{parentName:"tr",align:null},"Borrar el beneficiario")))),(0,l.kt)("h2",{id:"modelos"},"Modelos"),(0,l.kt)("p",null,"Los modelos deberan de ser definidos en singular, primera letra en may\xfascula y en el lenguaje predefinido(Es) ex."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"User\nBeneficiary\nDiagnosis\n")),(0,l.kt)("h3",{id:"propiedades"},"Propiedades"),(0,l.kt)("p",null,"Para las propiedades de los modelos, estos deben de ser nombrados en snake_case ex."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$this->updated_at\n")),(0,l.kt)("h3",{id:"metodos"},"Metodos"),(0,l.kt)("p",null,"Deberan de ser nombrados en camelCase"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"public function age();\npublic function getAll();\n")),(0,l.kt)("p",null,"lo mismo para las relaciones, pero en este caso deber\xe1 de ser en singular"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"public function city();\npublic function diagnosisAll();\n")),(0,l.kt)("h2",{id:"controladores"},"Controladores"),(0,l.kt)("p",null,"Los controladores deberan de ser dividido en archivos individuales por cada funci\xf3n las cuales estaran en un directorio con el nombre del modulo. Estos deberan de tener el nombre de la funci\xf3n que realizan seguido del nombre del modulo, esto capitalizado por cada palabra.\nEjemplo de nombrambiento de controlador:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Metodo"),(0,l.kt)("th",{parentName:"tr",align:null},"URL"),(0,l.kt)("th",{parentName:"tr",align:null},"HTTP Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Controlador"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Index"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"IndexBeneficiary")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"New"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiario/new"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"NewBeneficiary")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Create"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios"),(0,l.kt)("td",{parentName:"tr",align:null},"POST"),(0,l.kt)("td",{parentName:"tr",align:null},"CreateBeneficiary")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Read"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"ReadBeneficiary")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Edit"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}/edit"),(0,l.kt)("td",{parentName:"tr",align:null},"GET"),(0,l.kt)("td",{parentName:"tr",align:null},"EditBeneficiary")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Update"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}/edit"),(0,l.kt)("td",{parentName:"tr",align:null},"POST"),(0,l.kt)("td",{parentName:"tr",align:null},"UpdateBeneficiary")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Destroy"),(0,l.kt)("td",{parentName:"tr",align:null},"/beneficiarios/{id}/delete"),(0,l.kt)("td",{parentName:"tr",align:null},"POST"),(0,l.kt)("td",{parentName:"tr",align:null},"DeleteBeneficiary")))))}m.isMDXComponent=!0}}]);